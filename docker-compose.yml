version: "3.9"

services:
  db:
    image: postgres:16-alpine
    container_name: s2i-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: s2i
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d s2i"]
      interval: 5s
      timeout: 3s
      retries: 10

  redis:
    image: redis:7-alpine
    container_name: s2i-redis
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10

  api:
    image: python:3.12-slim
    container_name: s2i-api
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    working_dir: /app
    env_file:
      - .env.docker
    volumes:
      - ./:/app
    command: >
      sh -c "pip install -r requirements.txt &&
             uvicorn backend.app.main:app --host 0.0.0.0 --port 8000"
    ports:
      - "8000:8000"

  worker:
    image: python:3.12-slim
    container_name: s2i-worker
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy
    working_dir: /app
    env_file:
      - .env.docker
    volumes:
      - ./:/app
    # Placeholder command; we'll wire Celery/RQ tomorrow
    command: >
      sh -c "pip install -r requirements.txt && python -c 'print(\"worker placeholder up\")'"

volumes:
  pgdata:
  redisdata:
